Задание:
1.	Для практикума из занятия 7 продумать, где можно применить замыкания

Ответ:
Основное предназначение замыканий - это связать какие-то данные, с функциями,
которые работают с этими данными. Мы в общем-то делали что-то подобное, мы
создавали объекты, ставили им свойства и с этими свойствами работало несколько
методов внутри этих объектов.
Также замыканиями можно скрыть какие-то данные от программиста, который захочет
поработать с вашим кодом, или будет его использовать. Мы могли бы успешно скрыть
все наши внутренние объекты игры внутри замыкания, тогда тот, кто будет смотреть
какие методы предоставляет наш код вообще не знал бы о существовании объекта
змейки, объекта еды и т.д. Пользователю мы оставили бы только один метод, это
метод init, больше ему ничего и не нужно, все остальные методы и объекты - это
вещи, которые нужны для работоспособности нашей программы (сейчас я про змейку).
Как это сделать? Да очень просто:

(function() {
    const food = {
        // ...
    };

    // остальные объекты

    const game = {
        init(settings) {
            alert('Разбираем settings и инициализируем игру.');
            // ...
        }

        // ... остальные методы
    }

    window.initSnake = function (settings) {
        game.init(settings);
    }
})();

initSnake({speed: 5});

// Ни game, ни food, ничего что находится внутри замыкания мы не видим.
// console.log(game); // Ошибка, game не определен.
// console.log(food); // Ошибка, food не определен.

Прелесть в том, что мы дали пользователю только то, что он должен использовать,
остальные вещи мы убрали внутрь.